// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using QuickType;
//
//    var quiz = Quiz.FromJson(jsonString);

namespace QuizGenerator
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public class QuizData
    {
        public QuizData()
        {
            Quizlist = new List<Quiz>();
        }

        [JsonProperty("quizlist")]
        public List<Quiz> Quizlist { get; set; }
    }


    public class Quiz
    {
        public Quiz(int level)
        {
            Level = level;
            QuizItems = new List<QuizItem>();
        }

        [JsonProperty("level")]
        public int Level { get; set; }

        [JsonProperty("quizitems")]
        public List<QuizItem> QuizItems { get; set; }
    }

    public class QuizItem
    {
        [JsonProperty("question")]
        public string Question { get; set; }

        [JsonProperty("response")]
        public string Response { get; set; }
    }

    public static class QuizExtensions
    {
        public static QuizData FromJson(string json) => JsonConvert.DeserializeObject<QuizData>(json, Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this QuizData self) => JsonConvert.SerializeObject(self,Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
